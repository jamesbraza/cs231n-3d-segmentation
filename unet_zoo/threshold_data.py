"""Thresholding experiment data from predict.py's sweep_thresholds."""

import itertools

import matplotlib.pyplot as plt
import numpy as np

SWEEP_1_2D_SINGLE_ORIG = {
    0.05: 0.18177488446235657,
    0.15: 0.17407046258449554,
    0.25: 0.1677490770816803,
    0.35: 0.16212864220142365,
    0.44999999999999996: 0.15727464854717255,
    0.5499999999999999: 0.1526169776916504,
    0.65: 0.14698375761508942,
    0.75: 0.13881145417690277,
    0.85: 0.12447434663772583,
    0.95: 0.08512818813323975,
}
SWEEP_2_2D_SINGLE_ORIG = {
    0.0: 0.006955200340598822,
    0.05: 0.18177488446235657,
    0.1: 0.1779649704694748,
    0.15000000000000002: 0.17407046258449554,
    0.2: 0.17072844505310059,
    0.25: 0.1677490770816803,
    0.30000000000000004: 0.16484536230564117,
    0.35000000000000003: 0.16212864220142365,
    0.4: 0.15956364572048187,
}
SWEEP_3_2D_SINGLE_ORIG = {
    0.0: 0.006955200340598822,
    0.011111111111111112: 0.1755286604166031,
    0.022222222222222223: 0.1811886578798294,
    0.03333333333333333: 0.18207025527954102,
    0.044444444444444446: 0.18198563158512115,
    0.05555555555555556: 0.18153873085975647,
    0.06666666666666667: 0.18071383237838745,
    0.07777777777777778: 0.17984949052333832,
    0.08888888888888889: 0.17891229689121246,
    0.1: 0.1779649704694748,
}
SWEEP_2D_SINGLE_ORIG = (
    SWEEP_1_2D_SINGLE_ORIG | SWEEP_2_2D_SINGLE_ORIG | SWEEP_3_2D_SINGLE_ORIG
)

SWEEP_1_2D_SINGLE = {
    0.0: 0.007807774469256401,
    0.01: 0.4319836497306824,
    0.02: 0.466264933347702,
    0.03: 0.47202765941619873,
    0.04: 0.47530144453048706,
    0.05: 0.4765714704990387,
    0.06: 0.4774758219718933,
    0.07: 0.4773310720920563,
    0.08: 0.47617143392562866,
    0.09: 0.4747989773750305,
    0.1: 0.4732557237148285,
}
SWEEP_2_2D_SINGLE = {
    0.05: 0.4765714704990387,
    0.1: 0.4732557237148285,
    0.15: 0.46571478247642517,
    0.2: 0.45811718702316284,
    0.25: 0.44990038871765137,
    0.3: 0.44043034315109253,
    0.35: 0.4321950078010559,
    0.39999999999999997: 0.42367690801620483,
    0.44999999999999996: 0.41618090867996216,
    0.49999999999999994: 0.40914788842201233,
    0.5499999999999999: 0.4019516408443451,
    0.6: 0.39465031027793884,
    0.65: 0.386298805475235,
    0.7: 0.37627485394477844,
    0.75: 0.363809734582901,
    0.7999999999999999: 0.3477862477302551,
    0.85: 0.32539933919906616,
    0.9: 0.2896874248981476,
    0.95: 0.22076964378356934,
}
SWEEP_2D_SINGLE = SWEEP_1_2D_SINGLE | SWEEP_2_2D_SINGLE
SWEEP_3D_SINGLE = {
    0.05: 0.49321696162223816,
    0.1: 0.5499533414840698,
    0.15: 0.5656588673591614,
    0.2: 0.5725888013839722,
    0.25: 0.5734894275665283,
    0.3: 0.5700787901878357,
    0.35: 0.565679669380188,
    0.39999999999999997: 0.560477614402771,
    0.44999999999999996: 0.5540311932563782,
    0.49999999999999994: 0.5460432171821594,
    0.5499999999999999: 0.5367251634597778,
    0.6: 0.5259506702423096,
    0.65: 0.5130954384803772,
    0.7: 0.4979029595851898,
    0.75: 0.4795122444629669,
    0.7999999999999999: 0.45635977387428284,
    0.85: 0.4289328455924988,
    0.9: 0.391181081533432,
    0.95: 0.314601868391037,
}


fig, ax = plt.subplots()
sweep_2d_single_ax = ax.scatter(
    *zip(*list(SWEEP_2D_SINGLE.items()), strict=True),
    label="2-D",
)
argmax_2d_single_threshold = max(SWEEP_2D_SINGLE, key=SWEEP_2D_SINGLE.get)
max_2d_single_threshold = SWEEP_2D_SINGLE[argmax_2d_single_threshold]
coordinate = argmax_2d_single_threshold, max_2d_single_threshold
ax.annotate(
    str(tuple(round(x, 2) for x in coordinate)),
    xy=coordinate,
    color=sweep_2d_single_ax.get_facecolor(),
    xytext=(-10, 6),
    textcoords="offset points",
)
sweep_3d_single_ax = ax.scatter(
    *zip(*list(SWEEP_3D_SINGLE.items()), strict=True),
    label="3-D",
)
argmax_3d_single_threshold = max(SWEEP_3D_SINGLE, key=SWEEP_3D_SINGLE.get)
max_3d_single_threshold = SWEEP_3D_SINGLE[argmax_3d_single_threshold]
coordinate = argmax_3d_single_threshold, max_3d_single_threshold
ax.annotate(
    str(tuple(round(x, 2) for x in coordinate)),
    xy=coordinate,
    color=sweep_3d_single_ax.get_facecolor(),
    xytext=(-10, 6),
    textcoords="offset points",
)
ax.legend()
ax.set_xlim(left=0, right=1)
ax.set_xlabel("Binary Threshold")
ax.set_ylim(bottom=0, top=0.61)
ax.set_ylabel("Intersection over Union (IoU)")
ax.set_title("UNet2D and UNet3D Discerning Single Binary Threshold")
fig.tight_layout()
fig.savefig("unet_single_threshold_sweep.png")

SWEEP_3D_MULTI = {
    (0.1, 0.1, 0.1): 0.5499533414840698,
    (0.1, 0.1, 0.2): 0.5641478300094604,
    (0.1, 0.1, 0.30000000000000004): 0.5644810795783997,
    (0.1, 0.1, 0.4): 0.5613136887550354,
    (0.1, 0.1, 0.5): 0.5573362708091736,
    (0.1, 0.1, 0.6): 0.5517053008079529,
    (0.1, 0.2, 0.1): 0.5537796020507812,
    (0.1, 0.2, 0.2): 0.5679741501808167,
    (0.1, 0.2, 0.30000000000000004): 0.5683072805404663,
    (0.1, 0.2, 0.4): 0.5651399493217468,
    (0.1, 0.2, 0.5): 0.5611626505851746,
    (0.1, 0.2, 0.6): 0.5555315613746643,
    (0.1, 0.30000000000000004, 0.1): 0.5515376925468445,
    (0.1, 0.30000000000000004, 0.2): 0.5657323002815247,
    (0.1, 0.30000000000000004, 0.30000000000000004): 0.5660654306411743,
    (0.1, 0.30000000000000004, 0.4): 0.5628980994224548,
    (0.1, 0.30000000000000004, 0.5): 0.5589208006858826,
    (0.1, 0.30000000000000004, 0.6): 0.5532897114753723,
    (0.1, 0.4, 0.1): 0.5473937392234802,
    (0.1, 0.4, 0.2): 0.5615882873535156,
    (0.1, 0.4, 0.30000000000000004): 0.5619214773178101,
    (0.1, 0.4, 0.4): 0.5587541460990906,
    (0.1, 0.4, 0.5): 0.5547767281532288,
    (0.1, 0.4, 0.6): 0.5491456985473633,
    (0.1, 0.5, 0.1): 0.5405346155166626,
    (0.1, 0.5, 0.2): 0.5547292232513428,
    (0.1, 0.5, 0.30000000000000004): 0.5550622940063477,
    (0.1, 0.5, 0.4): 0.551895022392273,
    (0.1, 0.5, 0.5): 0.5479177236557007,
    (0.1, 0.5, 0.6): 0.5422866940498352,
    (0.1, 0.6, 0.1): 0.5310972929000854,
    (0.1, 0.6, 0.2): 0.5452918410301208,
    (0.1, 0.6, 0.30000000000000004): 0.5456249713897705,
    (0.1, 0.6, 0.4): 0.542457640171051,
    (0.1, 0.6, 0.5): 0.538480281829834,
    (0.1, 0.6, 0.6): 0.5328493118286133,
    (0.2, 0.1, 0.1): 0.5545679330825806,
    (0.2, 0.1, 0.2): 0.568762481212616,
    (0.2, 0.1, 0.30000000000000004): 0.5690957307815552,
    (0.2, 0.1, 0.4): 0.5659283399581909,
    (0.2, 0.1, 0.5): 0.5619510412216187,
    (0.2, 0.1, 0.6): 0.5563200116157532,
    (0.2, 0.2, 0.1): 0.558394193649292,
    (0.2, 0.2, 0.2): 0.5725888013839722,
    (0.2, 0.2, 0.30000000000000004): 0.5729219317436218,
    (0.2, 0.2, 0.4): 0.5697546005249023,
    (0.2, 0.2, 0.5): 0.5657773613929749,
    (0.2, 0.2, 0.6): 0.5601462125778198,
    (0.2, 0.30000000000000004, 0.1): 0.5561522841453552,
    (0.2, 0.30000000000000004, 0.2): 0.5703469514846802,
    (0.2, 0.30000000000000004, 0.30000000000000004): 0.5706800222396851,
    (0.2, 0.30000000000000004, 0.4): 0.5675126910209656,
    (0.2, 0.30000000000000004, 0.5): 0.5635355114936829,
    (0.2, 0.30000000000000004, 0.6): 0.5579043626785278,
    (0.2, 0.4, 0.1): 0.552008330821991,
    (0.2, 0.4, 0.2): 0.5662028789520264,
    (0.2, 0.4, 0.30000000000000004): 0.5665360689163208,
    (0.2, 0.4, 0.4): 0.5633687973022461,
    (0.2, 0.4, 0.5): 0.5593913793563843,
    (0.2, 0.4, 0.6): 0.5537603497505188,
    (0.2, 0.5, 0.1): 0.5451493263244629,
    (0.2, 0.5, 0.2): 0.5593439340591431,
    (0.2, 0.5, 0.30000000000000004): 0.5596769452095032,
    (0.2, 0.5, 0.4): 0.5565096139907837,
    (0.2, 0.5, 0.5): 0.5525323152542114,
    (0.2, 0.5, 0.6): 0.546901285648346,
    (0.2, 0.6, 0.1): 0.535711944103241,
    (0.2, 0.6, 0.2): 0.5499064922332764,
    (0.2, 0.6, 0.30000000000000004): 0.550239622592926,
    (0.2, 0.6, 0.4): 0.5470722913742065,
    (0.2, 0.6, 0.5): 0.543095052242279,
    (0.2, 0.6, 0.6): 0.5374639630317688,
    (0.30000000000000004, 0.1, 0.1): 0.5539667010307312,
    (0.30000000000000004, 0.1, 0.2): 0.5681613087654114,
    (0.30000000000000004, 0.1, 0.30000000000000004): 0.5684943795204163,
    (0.30000000000000004, 0.1, 0.4): 0.5653271675109863,
    (0.30000000000000004, 0.1, 0.5): 0.5613498091697693,
    (0.30000000000000004, 0.1, 0.6): 0.5557187795639038,
    (0.30000000000000004, 0.2, 0.1): 0.5577929615974426,
    (0.30000000000000004, 0.2, 0.2): 0.5719875693321228,
    (0.30000000000000004, 0.2, 0.30000000000000004): 0.5723206996917725,
    (0.30000000000000004, 0.2, 0.4): 0.5691534280776978,
    (0.30000000000000004, 0.2, 0.5): 0.5651760697364807,
    (0.30000000000000004, 0.2, 0.6): 0.5595449209213257,
    (0.30000000000000004, 0.30000000000000004, 0.1): 0.5555511116981506,
    (0.30000000000000004, 0.30000000000000004, 0.2): 0.5697457790374756,
    (0.30000000000000004, 0.30000000000000004, 0.30000000000000004): 0.5700787901878357,
    (0.30000000000000004, 0.30000000000000004, 0.4): 0.5669115781784058,
    (0.30000000000000004, 0.30000000000000004, 0.5): 0.562934160232544,
    (0.30000000000000004, 0.30000000000000004, 0.6): 0.5573031306266785,
    (0.30000000000000004, 0.4, 0.1): 0.5514070987701416,
    (0.30000000000000004, 0.4, 0.2): 0.565601646900177,
    (0.30000000000000004, 0.4, 0.30000000000000004): 0.5659348368644714,
    (0.30000000000000004, 0.4, 0.4): 0.562767505645752,
    (0.30000000000000004, 0.4, 0.5): 0.5587902069091797,
    (0.30000000000000004, 0.4, 0.6): 0.5531591176986694,
    (0.30000000000000004, 0.5, 0.1): 0.5445480942726135,
    (0.30000000000000004, 0.5, 0.2): 0.5587427020072937,
    (0.30000000000000004, 0.5, 0.30000000000000004): 0.5590757131576538,
    (0.30000000000000004, 0.5, 0.4): 0.5559084415435791,
    (0.30000000000000004, 0.5, 0.5): 0.5519311428070068,
    (0.30000000000000004, 0.5, 0.6): 0.5463001132011414,
    (0.30000000000000004, 0.6, 0.1): 0.5351106524467468,
    (0.30000000000000004, 0.6, 0.2): 0.549305260181427,
    (0.30000000000000004, 0.6, 0.30000000000000004): 0.5496383905410767,
    (0.30000000000000004, 0.6, 0.4): 0.5464711785316467,
    (0.30000000000000004, 0.6, 0.5): 0.5424938797950745,
    (0.30000000000000004, 0.6, 0.6): 0.5368627309799194,
    (0.4, 0.1, 0.1): 0.5516768097877502,
    (0.4, 0.1, 0.2): 0.5658713579177856,
    (0.4, 0.1, 0.30000000000000004): 0.5662046074867249,
    (0.4, 0.1, 0.4): 0.5630372166633606,
    (0.4, 0.1, 0.5): 0.5590599179267883,
    (0.4, 0.1, 0.6): 0.5534288287162781,
    (0.4, 0.2, 0.1): 0.5555031299591064,
    (0.4, 0.2, 0.2): 0.5696976780891418,
    (0.4, 0.2, 0.30000000000000004): 0.5700308084487915,
    (0.4, 0.2, 0.4): 0.566863477230072,
    (0.4, 0.2, 0.5): 0.5628862380981445,
    (0.4, 0.2, 0.6): 0.5572550892829895,
    (0.4, 0.30000000000000004, 0.1): 0.5532612800598145,
    (0.4, 0.30000000000000004, 0.2): 0.5674558281898499,
    (0.4, 0.30000000000000004, 0.30000000000000004): 0.5677888989448547,
    (0.4, 0.30000000000000004, 0.4): 0.5646215677261353,
    (0.4, 0.30000000000000004, 0.5): 0.5606443285942078,
    (0.4, 0.30000000000000004, 0.6): 0.5550132393836975,
    (0.4, 0.4, 0.1): 0.5491172075271606,
    (0.4, 0.4, 0.2): 0.5633118152618408,
    (0.4, 0.4, 0.30000000000000004): 0.5636449456214905,
    (0.4, 0.4, 0.4): 0.560477614402771,
    (0.4, 0.4, 0.5): 0.5565003156661987,
    (0.4, 0.4, 0.6): 0.5508692860603333,
    (0.4, 0.5, 0.1): 0.5422582030296326,
    (0.4, 0.5, 0.2): 0.556452751159668,
    (0.4, 0.5, 0.30000000000000004): 0.5567858815193176,
    (0.4, 0.5, 0.4): 0.5536185503005981,
    (0.4, 0.5, 0.5): 0.5496412515640259,
    (0.4, 0.5, 0.6): 0.5440102219581604,
    (0.4, 0.6, 0.1): 0.5328207612037659,
    (0.4, 0.6, 0.2): 0.547015368938446,
    (0.4, 0.6, 0.30000000000000004): 0.5473485589027405,
    (0.4, 0.6, 0.4): 0.544181227684021,
    (0.4, 0.6, 0.5): 0.5402039289474487,
    (0.4, 0.6, 0.6): 0.5345728397369385,
    (0.5, 0.1, 0.1): 0.5480788350105286,
    (0.5, 0.1, 0.2): 0.562273383140564,
    (0.5, 0.1, 0.30000000000000004): 0.5626065135002136,
    (0.5, 0.1, 0.4): 0.5594392418861389,
    (0.5, 0.1, 0.5): 0.5554619431495667,
    (0.5, 0.1, 0.6): 0.5498309135437012,
    (0.5, 0.2, 0.1): 0.5519051551818848,
    (0.5, 0.2, 0.2): 0.5660997033119202,
    (0.5, 0.2, 0.30000000000000004): 0.566432774066925,
    (0.5, 0.2, 0.4): 0.5632654428482056,
    (0.5, 0.2, 0.5): 0.5592882037162781,
    (0.5, 0.2, 0.6): 0.5536571741104126,
    (0.5, 0.30000000000000004, 0.1): 0.5496633648872375,
    (0.5, 0.30000000000000004, 0.2): 0.5638578534126282,
    (0.5, 0.30000000000000004, 0.30000000000000004): 0.5641909837722778,
    (0.5, 0.30000000000000004, 0.4): 0.5610235929489136,
    (0.5, 0.30000000000000004, 0.5): 0.5570462942123413,
    (0.5, 0.30000000000000004, 0.6): 0.5514152646064758,
    (0.5, 0.4, 0.1): 0.545519232749939,
    (0.5, 0.4, 0.2): 0.5597138404846191,
    (0.5, 0.4, 0.30000000000000004): 0.5600469708442688,
    (0.5, 0.4, 0.4): 0.5568796992301941,
    (0.5, 0.4, 0.5): 0.5529024004936218,
    (0.5, 0.4, 0.6): 0.5472712516784668,
    (0.5, 0.5, 0.1): 0.5386602282524109,
    (0.5, 0.5, 0.2): 0.5528547763824463,
    (0.5, 0.5, 0.30000000000000004): 0.553187906742096,
    (0.5, 0.5, 0.4): 0.5500205755233765,
    (0.5, 0.5, 0.5): 0.5460432171821594,
    (0.5, 0.5, 0.6): 0.5404122471809387,
    (0.5, 0.6, 0.1): 0.5292229056358337,
    (0.5, 0.6, 0.2): 0.5434174537658691,
    (0.5, 0.6, 0.30000000000000004): 0.5437505841255188,
    (0.5, 0.6, 0.4): 0.5405832529067993,
    (0.5, 0.6, 0.5): 0.5366058945655823,
    (0.5, 0.6, 0.6): 0.5309748649597168,
    (0.6, 0.1, 0.1): 0.5430546402931213,
    (0.6, 0.1, 0.2): 0.5572492480278015,
    (0.6, 0.1, 0.30000000000000004): 0.5575823187828064,
    (0.6, 0.1, 0.4): 0.5544151067733765,
    (0.6, 0.1, 0.5): 0.5504376292228699,
    (0.6, 0.1, 0.6): 0.5448066592216492,
    (0.6, 0.2, 0.1): 0.5468809008598328,
    (0.6, 0.2, 0.2): 0.5610754489898682,
    (0.6, 0.2, 0.30000000000000004): 0.5614085793495178,
    (0.6, 0.2, 0.4): 0.5582413077354431,
    (0.6, 0.2, 0.5): 0.5542640089988708,
    (0.6, 0.2, 0.6): 0.5486329793930054,
    (0.6, 0.30000000000000004, 0.1): 0.544638991355896,
    (0.6, 0.30000000000000004, 0.2): 0.5588335990905762,
    (0.6, 0.30000000000000004, 0.30000000000000004): 0.5591667890548706,
    (0.6, 0.30000000000000004, 0.4): 0.5559993982315063,
    (0.6, 0.30000000000000004, 0.5): 0.5520220994949341,
    (0.6, 0.30000000000000004, 0.6): 0.5463910698890686,
    (0.6, 0.4, 0.1): 0.5404950976371765,
    (0.6, 0.4, 0.2): 0.5546895861625671,
    (0.6, 0.4, 0.30000000000000004): 0.5550227761268616,
    (0.6, 0.4, 0.4): 0.5518554449081421,
    (0.6, 0.4, 0.5): 0.547878086566925,
    (0.6, 0.4, 0.6): 0.5422470569610596,
    (0.6, 0.5, 0.1): 0.5336359143257141,
    (0.6, 0.5, 0.2): 0.5478306412696838,
    (0.6, 0.5, 0.30000000000000004): 0.548163652420044,
    (0.6, 0.5, 0.4): 0.5449963212013245,
    (0.6, 0.5, 0.5): 0.5410191416740417,
    (0.6, 0.5, 0.6): 0.5353879928588867,
    (0.6, 0.6, 0.1): 0.5241986513137817,
    (0.6, 0.6, 0.2): 0.5383931994438171,
    (0.6, 0.6, 0.30000000000000004): 0.5387263894081116,
    (0.6, 0.6, 0.4): 0.5355589985847473,
    (0.6, 0.6, 0.5): 0.531581699848175,
    (0.6, 0.6, 0.6): 0.5259506702423096,
}

storage_wt_tc_et, mean_ious = ([], [], []), []
for threshold_tuples, mean_iou in SWEEP_3D_MULTI.items():
    mean_ious.append(mean_iou)
    for storage, threshold in zip(
        storage_wt_tc_et,
        threshold_tuples,
        strict=True,
    ):
        storage.append(threshold)
fig, ax = plt.subplots()
for x, label in zip(storage_wt_tc_et, ["WT", "TC", "ET"], strict=True):
    ax.scatter(x, mean_ious, label=label)
ax.set_xlim(left=0, right=1)
ax.set_xlabel("Binary Threshold")
ax.set_ylabel("Intersection over Union (IoU)")
ax.set_title("UNet3D Discerning Per-Channel Binary Threshold")
ax.legend()
fig.savefig("unet3d_multi_threshold_sweep_points.png")

bin_edges: tuple[tuple[float, float], ...] = tuple(
    (i / 100, (i + 10) / 100) for i in range(5, 65, 10)
)
bin_centers: tuple[float, ...] = tuple(
    (lower + upper) / 2 for lower, upper in bin_edges
)
gap_fraction = 0.8
bin_width = np.fromiter(
    (gap_fraction * (c2 - c1) for c1, c2 in itertools.pairwise(bin_centers)),
    dtype=float,
).mean()
storage_wt_tc_et = tuple(tuple([] for _ in range(len(bin_edges))) for _ in range(3))
for threshold_tuples, mean_iou in SWEEP_3D_MULTI.items():
    for storage, threshold in zip(
        storage_wt_tc_et,
        threshold_tuples,
        strict=True,
    ):
        for i, (lower_edge, upper_edge) in enumerate(bin_edges):
            if lower_edge < threshold < upper_edge:
                storage[i].append(mean_iou)
                break
binned_wt, binned_tc, binned_et = storage_wt_tc_et
wt_medians = np.fromiter((np.median(x) for x in binned_wt), dtype=float)
tc_medians = np.fromiter((np.median(x) for x in binned_tc), dtype=float)
et_medians = np.fromiter((np.median(x) for x in binned_et), dtype=float)
argmax_wt_median, max_wt_median = wt_medians.argmax(), wt_medians.max()
argmax_tc_median, max_tc_median = tc_medians.argmax(), tc_medians.max()
argmax_et_median, max_et_median = et_medians.argmax(), et_medians.max()

fig, ax = plt.subplots()
num_plots = 3.2
width = gap_fraction * bin_width / num_plots
ax.boxplot(
    binned_wt,
    positions=tuple(c - bin_width / num_plots for c in bin_centers),
    widths=width,
    manage_ticks=False,
)
ax.boxplot(
    binned_tc,
    positions=tuple(c for c in bin_centers),
    widths=width,
    manage_ticks=False,
)
ax.boxplot(
    binned_et,
    positions=tuple(c + bin_width / num_plots for c in bin_centers),
    widths=width,
    manage_ticks=False,
)
ax.set_xlim(0.05, 0.65)
ax.set_xlabel("Binary Threshold")
ax.set_ylabel("Intersection over Union (IoU)")
ax.set_title("UNet3D Discerning Discerning Per-Channel Binary Threshold")
fig.savefig("unet3d_multi_threshold_sweep_boxplot.png")
